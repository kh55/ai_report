# AI PRの比率を計算するワークフロー
# 組織内のAI関連PRの割合を週次で計算し、サマリーを出力します
name: ai-pr-org-metrics
on:
  # 毎週月曜日の0:00 UTC（日本時間9:00）に自動実行
  schedule:
    - cron: '0 0 * * 1'   # 月曜 0:00 UTC = 9:00 JST
  # 手動実行の設定
  workflow_dispatch:      # 手動実行を有効化
    inputs:
      start_date:
        description: '開始日 (YYYY-MM-DD)'
        required: false
        type: string
      end_date:
        description: '終了日 (YYYY-MM-DD)'
        required: false
        type: string
      ai_labels:
        description: 'AI関連PRのラベル（カンマ区切り）'
        required: false
        type: string
        default: 'ai,ai-generated,ai-assist'

jobs:
  # メインの計算ジョブ
  calc:
    runs-on: ubuntu-latest
    steps:
      # 必要なツールのインストール
      - name: Install required tools
        run: |
          if ! command -v jq &> /dev/null; then
            echo "::error::jq is not installed"
            exit 1
          fi
          if ! command -v bc &> /dev/null; then
            echo "::error::bc is not installed"
            exit 1
          fi

      # PRの数を取得するステップ
      - name: Get PR counts
        id: counts
        env:
          GH_TOKEN: ${{ secrets.METRICS_TOKEN }}  # GitHub APIの認証トークン
          OWNER: ${{ github.repository_owner }}    # リポジトリのオーナー
          AI_LABELS: ${{ github.event.inputs.ai_labels || 'ai,ai-generated,ai-assist' }}  # AI関連PRのラベル
        run: |
          # 環境変数のチェック
          if [ -z "$GH_TOKEN" ]; then
            echo "::error::METRICS_TOKEN is not set"
            exit 1
          fi

          # 日付の設定
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.start_date }}" ] && [ -n "${{ github.event.inputs.end_date }}" ]; then
            start="${{ github.event.inputs.start_date }}T00:00:00+09:00"
            end="${{ github.event.inputs.end_date }}T23:59:59+09:00"
          else
            start=$(date -d 'last week monday' +%FT00:00:00+09:00)
            end=$(date -d 'last week sunday' +%FT23:59:59+09:00)
          fi

          echo "Date range: $start to $end"

          # AIラベルクエリの作成
          label_query=$(echo "$AI_LABELS" | tr '[:upper:]' '[:lower:]' | tr ',' '\n' | sed 's/^/label:/' | paste -sd ' OR ' -)
          echo "AI labels query: $label_query"

          # リポジトリ一覧を取得
          echo "Fetching repositories..."
          repos=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
            "https://api.github.com/users/$OWNER/repos?per_page=100" | \
            jq -r '.[].name' 2>/dev/null || echo "")

          if [ -z "$repos" ]; then
            echo "::error::No repositories found or API request failed"
            exit 1
          fi

          echo "Found repositories: $(echo "$repos" | wc -l)"
          echo "Repository list:"
          echo "$repos" | sed 's/^/  - /'

          # 各リポジトリのPR数を取得
          total_ai=0
          total_all=0
          
          # 一時ファイルでJSON結果を構築
          temp_file=$(mktemp)
          echo "{}" > "$temp_file"

          # デバッグ用のサマリー情報
          repo_summary=""

          for repo in $repos; do
            echo "========================================="
            echo "Processing repository: $repo"
            echo "========================================="
            
            # まず、そのリポジトリに何かPRがあるかチェック
            any_pr_query="https://api.github.com/search/issues?q=repo:$OWNER/$repo+is:pr"
            any_pr_count=$(curl -s -H "Authorization: Bearer $GH_TOKEN" "$any_pr_query" | jq -r '.total_count // 0' 2>/dev/null || echo "0")
            echo "  Total PRs in repo (all time): $any_pr_count"
            
            # 期間内の全PRをチェック
            all_pr_query="https://api.github.com/search/issues?q=repo:$OWNER/$repo+is:pr+merged:$start..$end"
            all_pr_merged_count=$(curl -s -H "Authorization: Bearer $GH_TOKEN" "$all_pr_query" | jq -r '.total_count // 0' 2>/dev/null || echo "0")
            echo "  PRs merged in date range: $all_pr_merged_count"
            
            # AI PRの数を取得
            ai_query="https://api.github.com/search/issues?q=repo:$OWNER/$repo+is:pr+is:merged+($label_query)+merged:$start..$end"
            echo "  AI PR query: $ai_query"
            ai_count=$(curl -s -H "Authorization: Bearer $GH_TOKEN" "$ai_query" | \
              jq -r '.total_count // 0' 2>/dev/null || echo "0")
            
            # 全マージ済みPRの数を取得
            all_query="https://api.github.com/search/issues?q=repo:$OWNER/$repo+is:pr+is:merged+merged:$start..$end"
            echo "  All merged PR query: $all_query"
            all_count=$(curl -s -H "Authorization: Bearer $GH_TOKEN" "$all_query" | \
              jq -r '.total_count // 0' 2>/dev/null || echo "0")
            
            echo "  Results: AI PRs: $ai_count, All merged PRs: $all_count"
            
            # デバッグ: 実際のAPIレスポンスを確認
            if [ "$all_count" -eq 0 ] && [ "$any_pr_count" -gt 0 ]; then
              echo "  Debug: Repository has PRs but none in date range"
              # 最近のPRを確認
              recent_pr_query="https://api.github.com/search/issues?q=repo:$OWNER/$repo+is:pr+is:merged&sort=updated&order=desc"
              recent_pr_response=$(curl -s -H "Authorization: Bearer $GH_TOKEN" "$recent_pr_query")
              recent_pr_date=$(echo "$recent_pr_response" | jq -r '.items[0].closed_at // "none"' 2>/dev/null || echo "none")
              echo "  Most recent merged PR date: $recent_pr_date"
            fi
            
            # サマリー情報を追加
            repo_summary="${repo_summary}
$repo: Total PRs=$any_pr_count, Merged in range=$all_count, AI PRs=$ai_count"
            
            total_ai=$((total_ai + ai_count))
            total_all=$((total_all + all_count))
            
            # 比率計算
            pct="0"
            if [ "$all_count" -gt 0 ]; then
              pct=$(echo "scale=1; $ai_count*100/$all_count" | bc)
            fi
            
            # JSON結果に追加（一時ファイルを使用）
            jq --arg repo "$repo" \
               --arg ai "$ai_count" \
               --arg all "$all_count" \
               --arg pct "$pct" \
               '. + {($repo): {"ai": ($ai | tonumber), "all": ($all | tonumber), "pct": ($pct | tonumber)}}' \
               "$temp_file" > "${temp_file}.tmp" && mv "${temp_file}.tmp" "$temp_file"
          done

          echo "========================================="
          echo "SUMMARY OF ALL REPOSITORIES"
          echo "========================================="
          echo "$repo_summary"
          echo "========================================="

          # 全体の比率計算
          total_pct="0"
          if [ "$total_all" -gt 0 ]; then
            total_pct=$(echo "scale=1; $total_ai*100/$total_all" | bc)
          fi

          echo "FINAL TOTALS:"
          echo "Total AI PRs: $total_ai"
          echo "Total PRs: $total_all"
          echo "Percentage: $total_pct%"

          # デバッグ情報
          if [ "$total_all" -eq 0 ]; then
            echo "::warning::No merged PRs found in the specified date range"
            echo "::notice::Consider checking if the date range is correct or if there are any merged PRs in your repositories"
          fi

          # JSON結果を読み取り
          repo_results=$(cat "$temp_file")
          rm -f "$temp_file"

          # 結果を出力
          echo "total_ai=$total_ai" >> $GITHUB_OUTPUT
          echo "total_all=$total_all" >> $GITHUB_OUTPUT
          echo "total_pct=$total_pct" >> $GITHUB_OUTPUT
          echo "start=$start" >> $GITHUB_OUTPUT
          echo "end=$end" >> $GITHUB_OUTPUT
          echo "labels=$AI_LABELS" >> $GITHUB_OUTPUT
          
          # JSON結果をエスケープして出力
          {
            echo "repo_results<<EOF"
            echo "$repo_results"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      # 結果のサマリーを出力するステップ
      - name: Summary
        run: |
          # GitHub Actionsのステップサマリーに結果を出力
          echo "### AI PR 比率 (${{ steps.counts.outputs.start }}–${{ steps.counts.outputs.end }})" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### 全体" >> $GITHUB_STEP_SUMMARY
          echo "- AI PR: ${{ steps.counts.outputs.total_ai }}" >> $GITHUB_STEP_SUMMARY
          echo "- 全 PR: ${{ steps.counts.outputs.total_all }}" >> $GITHUB_STEP_SUMMARY
          echo "- 比 率: ${{ steps.counts.outputs.total_pct }}%" >> $GITHUB_STEP_SUMMARY
          echo "- 対象ラベル: ${{ steps.counts.outputs.labels }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### リポジトリ別" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.counts.outputs.total_all }}" -eq 0 ]; then
            echo "指定された期間にマージされたPRはありませんでした。" >> $GITHUB_STEP_SUMMARY
          else
            echo '${{ steps.counts.outputs.repo_results }}' | jq -r 'to_entries | .[] | "- **\(.key)**: AI PR: \(.value.ai), 全 PR: \(.value.all), 比率: \(.value.pct)%"' >> $GITHUB_STEP_SUMMARY
          fi